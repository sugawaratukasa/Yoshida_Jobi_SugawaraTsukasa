//******************************************************************************
// フェード [fade.cpp]
// Author : 管原　司
//******************************************************************************

//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2d.h"
#include "fade.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define COLOR_RATE	(0.05f)														// a加算減算値
#define COLOR_MIN	(D3DXCOLOR(0.0f,0.0f,0.0f,0.0f))							// 色の最小値
#define	COLOR_MAX	(D3DXCOLOR(0.0f,0.0f,0.0f,1.0f))							// 色の最大値
#define POS			(D3DXVECTOR3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2 ,0.0f))	// フェード位置座標
#define SIZE		(D3DXVECTOR3(SCREEN_WIDTH,SCREEN_HEIGHT,0.0f))				// サイズ
#define ROT			(D3DXVECTOR3(0.0f,0.0f,0.0f))								// 向き
//******************************************************************************
// コンストラクタ
//******************************************************************************
CFade::CFade(int nPriority) : CScene2D(nPriority)
{
	m_fade = FADE_NONE;
	m_ModeNext = CManager::MODE_NONE;
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CFade::~CFade()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CFade * CFade::Create(CManager::MODE mode)
{
	// CFadeクラスのポインタ
	CFade * pFade = NULL;

	// NULLの場合
	if (pFade == NULL)
	{
		//メモリ確保
		pFade = new CFade;

		// NULLでない場合
		if (pFade != NULL)
		{
			// モード代入
			pFade->m_ModeNext = mode;

			// 情報設定
			pFade->SetPolygon(POS, ROT, SIZE, COLOR_MIN);

			// オブジェクト設定
			pFade->SetObjType(OBJTYPE_FADE);

			// 初期化
			pFade->Init();
		}
	}
	// ポインタを返す
	return pFade;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CFade::Init(void)
{
	// フェードイン状態に
	m_fade = FADE_IN;

	// 初期化
	CScene2D::Init();

	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CFade::Uninit(void)
{
	//終了
	CScene2D::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CFade::Update(void)
{
	// 更新
	CScene2D::Update();

	// カラー取得
	D3DXCOLOR col = GetColor();

	//更新
	if (m_fade != FADE_NONE)
	{
		//フェードイン
		if (m_fade == FADE_IN)
		{
			//a値を加算
			col.a += COLOR_RATE;

			//画面が黒くなったら
			if (col.a >= COLOR_MAX.a)
			{
				//遷移
				CManager::SetMode(m_ModeNext);

				//フェード終了処理
				col.a = COLOR_MAX.a;

				// フェードアウトに設定
				m_fade = FADE_OUT;
			}
		}
		//フェードアウト
		if (m_fade == FADE_OUT)
		{
			//α値を減算
			col.a -= COLOR_RATE;

			//画面の透過
			if (col.a <= COLOR_MIN.a)
			{
				//フェード処理切り替え
				col.a = COLOR_MIN.a;

				// 終了
				Uninit();
				return;
			}
		}
		// カラー設定
		SetColor(col);
	}
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CFade::Draw(void)
{
	// 描画
	CScene2D::Draw();
}
