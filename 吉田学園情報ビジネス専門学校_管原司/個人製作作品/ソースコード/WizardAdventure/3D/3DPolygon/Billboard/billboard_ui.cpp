//******************************************************************************
// ビルボードUI[billboard_ui.cpp]
// Author : 管原司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "manager.h"
#include "renderer.h"
#include "billboard_ui.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define FIREBALL_TEXT	("data/Texture/FireBall.png")	// パス
#define ICEBALL_TEXT	("data/Texture/IceBall.png")	// パス
//******************************************************************************
// 静的メンバ変数宣言
//******************************************************************************
LPDIRECT3DTEXTURE9 CBillboard_UI::m_apTexture[TEX_TYPE_MAX] = {};
//******************************************************************************
// コンストラクタ
//******************************************************************************
CBillboard_UI::CBillboard_UI(int nPriority)
{
	m_Textype = TEX_TYPE_NONE;
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CBillboard_UI::~CBillboard_UI()
{
}
//******************************************************************************
// テクスチャ読み込み
//******************************************************************************
HRESULT CBillboard_UI::Load(void)
{
	// レンダラー取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャ読み込み
	D3DXCreateTextureFromFile(pDevice, FIREBALL_TEXT, &m_apTexture[TEX_TYPE_FIREBALL]);
	D3DXCreateTextureFromFile(pDevice, ICEBALL_TEXT, &m_apTexture[TEX_TYPE_ICEBALL]);

	return S_OK;
}
//******************************************************************************
// テクスチャ破棄
//******************************************************************************
void CBillboard_UI::Unload(void)
{
	// 最大数分回す
	for (int nCnt = INIT_INT; nCnt < TEX_TYPE_MAX; nCnt++)
	{
		// NULLチェック
		if (m_apTexture[nCnt] != NULL)
		{
			// 破棄
			m_apTexture[nCnt]->Release();

			// NULL
			m_apTexture[nCnt] = NULL;
		}
	}
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CBillboard_UI::Init(void)
{
	// 初期化
	CBillboard::Init();
	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CBillboard_UI::Uninit(void)
{
	// 終了
	CBillboard::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CBillboard_UI::Update(void)
{
	// 更新
	CBillboard::Update();
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CBillboard_UI::Draw(void)
{
	// 描画
	CBillboard::Draw();
}
//******************************************************************************
// 情報設定
//******************************************************************************
void CBillboard_UI::SetBillboard(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 size, D3DXCOLOR col, TEX_TYPE Textype)
{
	// 位置設定
	SetPosition(pos);

	// 向き設定
	SetRotation(rot);

	// サイズ設定
	SetSize(size);

	// 色設定
	SetColor(col);

	// テクスチャ受け渡し
	BindTexture(m_apTexture[Textype]);

	// オブジェクト設定
	SetObjType(OBJTYPE_BILLBOARD_UI);
}