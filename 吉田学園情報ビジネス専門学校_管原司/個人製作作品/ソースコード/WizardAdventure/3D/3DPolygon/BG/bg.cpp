//******************************************************************************
// 背景[bg.cpp]
// Author : 管原司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "bg_cloud.h"
#include "bg_sky.h"
#include "bg.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define POS		(D3DXVECTOR3(0.0f,210.0f,200.0f))		// 位置
#define POS_2	(D3DXVECTOR3(0.0f,210.0f,50.0f))		// 位置
#define SIZE	(D3DXVECTOR3(2500.0f,600.0f,0.0f))		// サイズ
//******************************************************************************
// コンストラクタ
//******************************************************************************
CBg::CBg(int nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CBg::~CBg()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CBg * CBg::Create()
{
	// CBgのポインタ
	CBg *pBg = NULL;

	// NULLの場合
	if(pBg == NULL)
	{
		// メモリ確保
		pBg = new CBg;

		// NULLでない場合
		if (pBg != NULL)
		{
			// 初期化
			pBg->Init();
		}
	}
	// ポインタを返す
	return pBg;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CBg::Init(void)
{
	// 背景生成
	CBg_Sky::Create(POS, SIZE);
	CBg_Cloud::Create(POS, SIZE);
	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CBg::Uninit(void)
{
	// 破棄
	Release();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CBg::Update(void)
{
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CBg::Draw(void)
{
}