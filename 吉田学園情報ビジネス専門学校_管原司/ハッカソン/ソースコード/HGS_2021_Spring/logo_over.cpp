//=============================================================================
//
// スタートロゴ [logo_start.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "logo_over.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("Data/Texture/over_logo.png")
#define POSITION (D3DXVECTOR3(SCREEN_WIDTH / 2,SCREEN_HEIGHT / 2 - 100.0f,0.0f))
#define SIZE (D3DXVECTOR3(1000.0f,200.0f,0.0f))

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 COverLogo::m_pTexture;	//テクスチャのポインタ

											//=============================================================================
											// コンストラクタ
											//=============================================================================
COverLogo::COverLogo()
{
	m_nTime = 0;
}

//=============================================================================
// デストラクタ
//=============================================================================
COverLogo::~COverLogo()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT COverLogo::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	// デバイスへのポインタ
		TEXTURE_PASS,					// ファイルの名前
		&m_pTexture);					// 読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void COverLogo::TextureUnload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
COverLogo * COverLogo::Create()
{
	//オーバーロゴのポインタ
	COverLogo * pOverLogo = NULL;
	//オーバーロゴのポインタがNULLの場合
	if (pOverLogo == NULL)
	{
		//オーバーロゴのメモリ確保
		pOverLogo = new COverLogo;
		//オーバーのポインタがNULLではない場合
		if (pOverLogo != NULL)
		{
			//オーバーロゴの位置設定
			pOverLogo->SetPosition(POSITION);
			//オーバーロゴのサイズ設定
			pOverLogo->SetSize(SIZE);
			//オーバーロゴの初期化処理関数呼び出し
			pOverLogo->Init();
		}
	}
	//オーバーロゴのボタンのポインタを返す
	return pOverLogo;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT COverLogo::Init(void)
{
	//テクスチャのUV座標の設定
	D3DXVECTOR2 aTexture[NUM_VERTEX];
	aTexture[0] = D3DXVECTOR2(0.0f, 0.0f);
	aTexture[1] = D3DXVECTOR2(1.0f, 0.0f);
	aTexture[2] = D3DXVECTOR2(0.0f, 1.0f);
	aTexture[3] = D3DXVECTOR2(1.0f, 1.0f);
	//ボタンの初期化処理関数呼び出し
	CScene2d::Init();
	//テクスチャの設定
	SetTexture(aTexture);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void COverLogo::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CScene2d::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void COverLogo::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CScene2d::Update();
	m_nTime++;
	if (m_nTime >= 150)
	{
		//ゲームに移動
		CManager::StartFade(CManager::MODE_TITLE);
	}
}

//=============================================================================
// 描画処理関数
//=============================================================================
void COverLogo::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CScene2d::Draw();
}