//=============================================================================
//
// ボタンロゴ [logo_button.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "logo_button.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("Data/Texture/button.png")
#define POSITION (D3DXVECTOR3(SCREEN_WIDTH / 2,SCREEN_HEIGHT - 200.0f,0.0f))
#define SIZE (D3DXVECTOR3(700.0f,100.0f,0.0f))

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CButtonLogo::m_pTexture;	//テクスチャのポインタ

											//=============================================================================
											// コンストラクタ
											//=============================================================================
CButtonLogo::CButtonLogo()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CButtonLogo::~CButtonLogo()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CButtonLogo::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	// デバイスへのポインタ
		TEXTURE_PASS,					// ファイルの名前
		&m_pTexture);					// 読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CButtonLogo::TextureUnload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CButtonLogo * CButtonLogo::Create()
{
	//ボタンロゴのポインタ
	CButtonLogo * pButtonLogo = NULL;
	//ボタンロゴのポインタがNULLの場合
	if (pButtonLogo == NULL)
	{
		//ボタンロゴのメモリ確保
		pButtonLogo = new CButtonLogo;
		//ボタンのポインタがNULLではない場合
		if (pButtonLogo != NULL)
		{
			//ボタンロゴの位置設定
			pButtonLogo->SetPosition(POSITION);
			//ボタンロゴのサイズ設定
			pButtonLogo->SetSize(SIZE);
			//ボタンロゴの初期化処理関数呼び出し
			pButtonLogo->Init();
		}
	}
	//ボタンロゴのボタンのポインタを返す
	return pButtonLogo;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CButtonLogo::Init(void)
{
	//テクスチャのUV座標の設定
	D3DXVECTOR2 aTexture[NUM_VERTEX];
	aTexture[0] = D3DXVECTOR2(0.0f, 0.0f);
	aTexture[1] = D3DXVECTOR2(1.0f, 0.0f);
	aTexture[2] = D3DXVECTOR2(0.0f, 1.0f);
	aTexture[3] = D3DXVECTOR2(1.0f, 1.0f);
	//ボタンの初期化処理関数呼び出し
	CScene2d::Init();
	//テクスチャの設定
	SetTexture(aTexture);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CButtonLogo::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CScene2d::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CButtonLogo::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CScene2d::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CButtonLogo::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CScene2d::Draw();
}