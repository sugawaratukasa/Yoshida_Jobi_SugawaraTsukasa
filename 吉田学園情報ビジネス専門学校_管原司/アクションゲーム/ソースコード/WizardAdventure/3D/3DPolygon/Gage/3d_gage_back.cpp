//******************************************************************************
// フレーム[frame.cpp]
// Author : 管原司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "input.h"
#include "keyboard.h"
#include "scene.h"
#include "../3D/3DPolygon/scene3d.h"
#include "3d_gage_back.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define ROT (D3DXVECTOR3(0.0f,0.0f,0.0f))		// 向き
#define COL (D3DXCOLOR(0.0f,0.0f,0.0f,1.0f))	// 色
//******************************************************************************
// 静的メンバ変数初期化
//******************************************************************************
//******************************************************************************
// コンストラクタ
//******************************************************************************
C3D_Gage_Back::C3D_Gage_Back(int nPriority) : CScene3d(nPriority)
{

}
//******************************************************************************
// デストラクタ
//******************************************************************************
C3D_Gage_Back::~C3D_Gage_Back()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
C3D_Gage_Back * C3D_Gage_Back::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// CPolygonのポインタ
	C3D_Gage_Back *p3D_Gage_Back = NULL;

	// NULLの場合
	if (p3D_Gage_Back == NULL)
	{
		// メモリ確保
		p3D_Gage_Back = new C3D_Gage_Back;

		// NULLでない場合
		if (p3D_Gage_Back != NULL)
		{
			// 情報設定
			p3D_Gage_Back->SetPolygon(pos, ROT, size, COL);

			// 初期化
			p3D_Gage_Back->Init();
		}
	}
	// ポインタを返す
	return p3D_Gage_Back;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT C3D_Gage_Back::Init(void)
{
	// 初期化
	CScene3d::Init();

	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void C3D_Gage_Back::Uninit(void)
{
	// 終了
	CScene3d::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void C3D_Gage_Back::Update(void)
{
	// 更新
	CScene3d::Update();
}
//******************************************************************************
// 描画関数
//******************************************************************************
void C3D_Gage_Back::Draw(void)
{
	// 描画
	CScene3d::Draw();
}