//******************************************************************************
// 空[bg_sky.cpp]
// Author : 管原司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "main.h"
#include "renderer.h"
#include "manager.h"
#include "joystick.h"
#include "../3D/Model/player.h"
#include "bg_sky.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define POS	(D3DXVECTOR3(PlayerPos.x + 200.0f, PlayerPos.y, PlayerPos.z))
#define COL	(D3DXCOLOR(0.0f,0.0f,0.0f,1.0f))
//******************************************************************************
// 静的メンバ変数初期化
//******************************************************************************

//******************************************************************************
// コンストラクタ
//******************************************************************************
CBg_Sky::CBg_Sky(int nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CBg_Sky::~CBg_Sky()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CBg_Sky * CBg_Sky::Create(D3DXVECTOR3 pos,D3DXVECTOR3 size)
{
	// CBg_Skyのポインタ
	CBg_Sky *pSky = NULL;

	// NULLの場合
	if (pSky == NULL)
	{
		// メモリ確保
		pSky = new CBg_Sky;

		// NULLでない場合
		if (pSky != NULL)
		{
			// 情報設定
			pSky->SetPolygon(pos, size, C3D_Polygon::TEX_TYPE_SKY);

			// 初期化
			pSky->Init();
		}
	}

	// ポインタを返す
	return pSky;
}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CBg_Sky::Init(void)
{
	// 初期化
	C3D_Polygon::Init();

	// 色設定
	SetColor(COL);
	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CBg_Sky::Uninit(void)
{
	// 終了
	C3D_Polygon::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CBg_Sky::Update(void)
{
	// 更新
	C3D_Polygon::Update();

	// 位置取得
	D3DXVECTOR3 pos = GetPosition();

	// プレイヤーの位置
	D3DXVECTOR3 PlayerPos;

	// CSceneクラスのポインタ
	CScene *pScene = NULL;
	do
	{
		// シーン取得
		pScene = GetScene(OBJTYPE_PLAYER);

		// NULLでない場合
		if(pScene != NULL)
		{
			// オブジェクトタイプ取得
			OBJTYPE objtype = pScene->GetObjType();

			// オブジェタイププレイヤーの場合
			if (objtype = OBJTYPE_PLAYER)
			{
				// プレイヤーの位置取得
				PlayerPos = ((CPlayer*)pScene)->GetPos();

				// 位置代入
				pos.x = POS.x;

				// 位置設定
				SetPosition(pos);
			}
		}
		// NULLになるまで
	} while (pScene != NULL);
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CBg_Sky::Draw(void)
{
	// 描画
	C3D_Polygon::Draw();
}