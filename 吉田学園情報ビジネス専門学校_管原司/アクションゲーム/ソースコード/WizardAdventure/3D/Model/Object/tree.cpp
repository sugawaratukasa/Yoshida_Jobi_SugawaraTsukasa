//******************************************************************************
// ブロック[block.cpp]
// Author : 管原 司
//******************************************************************************

//******************************************************************************
//インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "../3D/3DPolygon/scene3d.h"
#include "../3D/Model/model.h"
#include "3d_obj.h"
#include "tree.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define ROT			(D3DXVECTOR3(0.0f,D3DXToRadian(fRot),0.0f))	// 向き
#define RANDOM_ROT	(360)										// ランダムの向き
//******************************************************************************
//静的メンバ変数
//******************************************************************************

//******************************************************************************
// コンストラクタ
//******************************************************************************
CTree::CTree(int nPriority) : C3D_Obj(nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CTree::~CTree()
{

}
//******************************************************************************
// 生成関数
//******************************************************************************
CTree * CTree::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// CTreeのポインタ
	CTree *pTree = NULL;

	// NULLの場合
	if (pTree == NULL)
	{
		// メモリ確保
		pTree = new CTree;

		// NULLでない場合
		if (pTree != NULL)
		{
			// ランダム
			float fRot = float(rand() % RANDOM_ROT);

			// 情報設定
			pTree->SetModel(pos, ROT, size, C3D_Obj::TYPE_TREE);

			// オブジェクトタイプ設定
			pTree->SetObjType(OBJTYPE_BACK_OBJ);

			// 初期化
			pTree->Init();
		}
	}
	// ポインタを返す
	return pTree;
}
//******************************************************************************
// 初期化処理
//******************************************************************************
HRESULT CTree::Init(void)
{
	// 初期化
	C3D_Obj::Init();

	return S_OK;
}
//******************************************************************************
// 終了処理
//******************************************************************************
void CTree::Uninit(void)
{
	// 終了
	C3D_Obj::Uninit();
}
//******************************************************************************
// 更新処理
//******************************************************************************
void CTree::Update(void)
{
	// 更新
	C3D_Obj::Update();
}

//******************************************************************************
// 描画処理
//******************************************************************************
void CTree::Draw(void)
{
	// 描画
	C3D_Obj::Draw();
}